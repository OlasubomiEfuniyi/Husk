/* Name: tree.c
   Purpose: This file defines methods that helps
   a user manage a binary Tree.
   Author: Olasubomi Efuniyi
   Date: 08|13|2018
*/

#include <stdio.h>
#include <stdlib.h>
#include "tree.h"

Node *add_node(Tree *tree, Node *node) {
  if(tree != NULL && node != NULL) {
    /* Check if tree is empty */
    if(tree->root == NULL) {
      /* Place node at the root of the tree */
      tree->root = node;
    } else {
      /* Tree is not empty */
      while(tree -> root) {
	/* Find an empty spot */
	if(!(tree -> left)) {
	  if(((tree -> left) = calloc(1, sizof(Tree))) == NULL) {
	    perror("Calloc failed");
	    exit(EXIT_FAILURE);
	  }
	  add_node(tree -> left, node);
	} else if(!(tree -> right)) {
	  if(((tree -> right) = calloc(1, sizof(Tree))) == NULL) {
	    perror("Calloc failed");
	    exit(EXIT_FAILURE);
	  }
	  add_node(tree -> right, node);
	}
      }

      /* DESIGN TREE STRUCTURE */
    }
  }
}
